// Mocks generated by Mockito 5.4.4 from annotations
// in ecosmart/test/app_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:ecosmart/models/achievement_model.dart' as _i8;
import 'package:ecosmart/models/activity_model.dart' as _i5;
import 'package:ecosmart/models/challenge_model.dart' as _i10;
import 'package:ecosmart/models/goal_model.dart' as _i7;
import 'package:ecosmart/models/user_profile_model.dart' as _i6;
import 'package:ecosmart/services/firebase_service.dart' as _i2;
import 'package:firebase_auth/firebase_auth.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i9;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [FirebaseService].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseService extends _i1.Mock implements _i2.FirebaseService {
  MockFirebaseService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Stream<_i4.User?> get userStream => (super.noSuchMethod(
        Invocation.getter(#userStream),
        returnValue: _i3.Stream<_i4.User?>.empty(),
      ) as _i3.Stream<_i4.User?>);

  @override
  _i3.Future<void> addActivity(_i5.Activity? activity) => (super.noSuchMethod(
        Invocation.method(
          #addActivity,
          [activity],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Stream<List<_i5.Activity>> getUserActivities() => (super.noSuchMethod(
        Invocation.method(
          #getUserActivities,
          [],
        ),
        returnValue: _i3.Stream<List<_i5.Activity>>.empty(),
      ) as _i3.Stream<List<_i5.Activity>>);

  @override
  _i3.Future<List<_i5.Activity>> getRecentActivities(int? limit) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRecentActivities,
          [limit],
        ),
        returnValue: _i3.Future<List<_i5.Activity>>.value(<_i5.Activity>[]),
      ) as _i3.Future<List<_i5.Activity>>);

  @override
  _i3.Future<List<_i5.Activity>> getAllUserActivities() => (super.noSuchMethod(
        Invocation.method(
          #getAllUserActivities,
          [],
        ),
        returnValue: _i3.Future<List<_i5.Activity>>.value(<_i5.Activity>[]),
      ) as _i3.Future<List<_i5.Activity>>);

  @override
  _i3.Future<void> updateActivity(_i5.Activity? activity) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateActivity,
          [activity],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> deleteActivity(String? activityId) => (super.noSuchMethod(
        Invocation.method(
          #deleteActivity,
          [activityId],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<_i6.UserProfile?> getUserProfile(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserProfile,
          [userId],
        ),
        returnValue: _i3.Future<_i6.UserProfile?>.value(),
      ) as _i3.Future<_i6.UserProfile?>);

  @override
  _i3.Future<void> updateUserProfile(_i6.UserProfile? profile) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUserProfile,
          [profile],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<_i6.UserProfile?> getCurrentUserProfile() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentUserProfile,
          [],
        ),
        returnValue: _i3.Future<_i6.UserProfile?>.value(),
      ) as _i3.Future<_i6.UserProfile?>);

  @override
  _i3.Future<void> createUserProfile(
    _i4.User? user,
    String? name,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #createUserProfile,
          [
            user,
            name,
          ],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> setGoal(_i7.Goal? goal) => (super.noSuchMethod(
        Invocation.method(
          #setGoal,
          [goal],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<_i7.Goal?> getCurrentGoal() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentGoal,
          [],
        ),
        returnValue: _i3.Future<_i7.Goal?>.value(),
      ) as _i3.Future<_i7.Goal?>);

  @override
  _i3.Future<List<_i8.Achievement>> getUserAchievements() =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserAchievements,
          [],
        ),
        returnValue:
            _i3.Future<List<_i8.Achievement>>.value(<_i8.Achievement>[]),
      ) as _i3.Future<List<_i8.Achievement>>);

  @override
  _i3.Future<void> addAchievement(_i8.Achievement? achievement) =>
      (super.noSuchMethod(
        Invocation.method(
          #addAchievement,
          [achievement],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<String> getAchievementLink(String? achievementId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAchievementLink,
          [achievementId],
        ),
        returnValue: _i3.Future<String>.value(_i9.dummyValue<String>(
          this,
          Invocation.method(
            #getAchievementLink,
            [achievementId],
          ),
        )),
      ) as _i3.Future<String>);

  @override
  _i3.Future<List<_i10.Challenge>> getActiveChallenges() => (super.noSuchMethod(
        Invocation.method(
          #getActiveChallenges,
          [],
        ),
        returnValue: _i3.Future<List<_i10.Challenge>>.value(<_i10.Challenge>[]),
      ) as _i3.Future<List<_i10.Challenge>>);

  @override
  _i3.Future<void> joinChallenge(
    String? challengeId,
    String? userId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #joinChallenge,
          [
            challengeId,
            userId,
          ],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> updateChallengeProgress(
    String? challengeId,
    int? progress,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateChallengeProgress,
          [
            challengeId,
            progress,
          ],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<_i4.User?> signInWithEmailAndPassword(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithEmailAndPassword,
          [
            email,
            password,
          ],
        ),
        returnValue: _i3.Future<_i4.User?>.value(),
      ) as _i3.Future<_i4.User?>);

  @override
  _i3.Future<_i4.User?> registerWithEmailAndPassword(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #registerWithEmailAndPassword,
          [
            email,
            password,
          ],
        ),
        returnValue: _i3.Future<_i4.User?>.value(),
      ) as _i3.Future<_i4.User?>);

  @override
  _i3.Future<void> signOut() => (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> sendPasswordResetEmail(String? email) => (super.noSuchMethod(
        Invocation.method(
          #sendPasswordResetEmail,
          [email],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
